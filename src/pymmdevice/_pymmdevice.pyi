from __future__ import annotations

import typing

import numpy

__all__ = [
    "AutoFocusInstance",
    "Callable",
    "CameraInstance",
    "Core",
    "Device",
    "DeviceDetectionStatus",
    "DeviceInstance",
    "DeviceType",
    "GalvoInstance",
    "GenericInstance",
    "HubInstance",
    "ImageProcessorInstance",
    "LoadedDeviceAdapter",
    "Logger",
    "MagnifierInstance",
    "MockCMMCore",
    "PluginManager",
    "PropertyType",
    "SLMInstance",
    "SerialInstance",
    "ShutterInstance",
    "SignalIOInstance",
    "StageInstance",
    "StateInstance",
    "XYStageInstance",
]

class AutoFocusInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> AutoFocusInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class Callable:
    pass

class CameraInstance:
    def AddTag(self, arg0: str, arg1: str, arg2: str) -> None: ...
    def AddToExposureSequence(self, arg0: float) -> int: ...
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearExposureSequence(self) -> int: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def ClearROI(self) -> int: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetBinning(self) -> int: ...
    def GetBitDepth(self) -> int: ...
    def GetChannelName(self, arg0: int) -> str: ...
    def GetComponentName(self, arg0: int) -> str: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetExposure(self) -> float: ...
    def GetExposureSequenceMaxLength(self, arg0: int) -> int: ...
    def GetImageArray(self, arg: int = 0) -> numpy.ndarray: ...
    @typing.overload
    def GetImageBuffer(self) -> int: ...
    @typing.overload
    def GetImageBuffer(self, arg0: int) -> int: ...
    def GetImageBufferAsRGB32(self) -> int: ...
    def GetImageBufferSize(self) -> int: ...
    def GetImageBytesPerPixel(self) -> int: ...
    def GetImageHeight(self) -> int: ...
    def GetImageWidth(self) -> int: ...
    def GetLabel(self) -> str: ...
    def GetMultiROI(
        self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int
    ) -> int: ...
    def GetMultiROICount(self, arg0: int) -> int: ...
    def GetName(self) -> str: ...
    def GetNumberOfChannels(self) -> int: ...
    def GetNumberOfComponents(self) -> int: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetPixelSizeUm(self) -> float: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetROI(self) -> tuple[int, int, int, int]: ...
    def GetRawPtr(self) -> Device: ...
    def GetTags(self) -> str: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsCapturing(self) -> bool: ...
    def IsExposureSequenceable(self, arg0: bool) -> int: ...
    def IsInitialized(self) -> bool: ...
    def IsMultiROISet(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def RemoveTag(self, arg0: str) -> None: ...
    def SendExposureSequence(self) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetBinning(self, arg0: int) -> int: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetExposure(self, arg0: float) -> None: ...
    def SetMultiROI(
        self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int
    ) -> int: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def SetROI(self, arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...
    def Shutdown(self) -> None: ...
    def SnapImage(self) -> int: ...
    def StartExposureSequence(self) -> int: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    @typing.overload
    def StartSequenceAcquisition(self, arg0: int, arg1: float, arg2: bool) -> int: ...
    @typing.overload
    def StartSequenceAcquisition(self, arg0: float) -> int: ...
    def StopExposureSequence(self) -> int: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def StopSequenceAcquisition(self) -> int: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def SupportsMultiROI(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> CameraInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class Core:
    pass

class Device:
    pass

class DeviceDetectionStatus:
    """
    Members:

      Misconfigured

      Unimplemented

      CanNotCommunicate

      CanCommunicate
    """

    CanCommunicate: typing.ClassVar[
        DeviceDetectionStatus
    ]  # value = <DeviceDetectionStatus.CanCommunicate: 1>
    CanNotCommunicate: typing.ClassVar[
        DeviceDetectionStatus
    ]  # value = <DeviceDetectionStatus.CanNotCommunicate: 0>
    Misconfigured: typing.ClassVar[
        DeviceDetectionStatus
    ]  # value = <DeviceDetectionStatus.Misconfigured: -1>
    Unimplemented: typing.ClassVar[
        DeviceDetectionStatus
    ]  # value = <DeviceDetectionStatus.Unimplemented: -2>
    __members__: typing.ClassVar[
        dict[str, DeviceDetectionStatus]
    ]  # value = {'Misconfigured': <DeviceDetectionStatus.Misconfigured: -1>, 'Unimplemented': <DeviceDetectionStatus.Unimplemented: -2>, 'CanNotCommunicate': <DeviceDetectionStatus.CanNotCommunicate: 0>, 'CanCommunicate': <DeviceDetectionStatus.CanCommunicate: 1>}
    def __eq__(self, other: typing.Any) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __init__(self, value: int) -> None: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: typing.Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setstate__(self, state: int) -> None: ...
    def __str__(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class DeviceInstance:
    pass

class DeviceType:
    """
    Members:

      UnknownType

      AnyType

      CameraDevice

      ShutterDevice

      StateDevice

      StageDevice

      XYStageDevice

      SerialDevice

      GenericDevice

      AutoFocusDevice

      CoreDevice

      ImageProcessorDevice

      SignalIODevice

      MagnifierDevice

      SLMDevice

      HubDevice

      GalvoDevice
    """

    AnyType: typing.ClassVar[DeviceType]  # value = <DeviceType.AnyType: 1>
    AutoFocusDevice: typing.ClassVar[
        DeviceType
    ]  # value = <DeviceType.AutoFocusDevice: 9>
    CameraDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.CameraDevice: 2>
    CoreDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.CoreDevice: 10>
    GalvoDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.GalvoDevice: 16>
    GenericDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.GenericDevice: 8>
    HubDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.HubDevice: 15>
    ImageProcessorDevice: typing.ClassVar[
        DeviceType
    ]  # value = <DeviceType.ImageProcessorDevice: 11>
    MagnifierDevice: typing.ClassVar[
        DeviceType
    ]  # value = <DeviceType.MagnifierDevice: 13>
    SLMDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.SLMDevice: 14>
    SerialDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.SerialDevice: 7>
    ShutterDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.ShutterDevice: 3>
    SignalIODevice: typing.ClassVar[
        DeviceType
    ]  # value = <DeviceType.SignalIODevice: 12>
    StageDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.StageDevice: 5>
    StateDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.StateDevice: 4>
    UnknownType: typing.ClassVar[DeviceType]  # value = <DeviceType.UnknownType: 0>
    XYStageDevice: typing.ClassVar[DeviceType]  # value = <DeviceType.XYStageDevice: 6>
    __members__: typing.ClassVar[
        dict[str, DeviceType]
    ]  # value = {'UnknownType': <DeviceType.UnknownType: 0>, 'AnyType': <DeviceType.AnyType: 1>, 'CameraDevice': <DeviceType.CameraDevice: 2>, 'ShutterDevice': <DeviceType.ShutterDevice: 3>, 'StateDevice': <DeviceType.StateDevice: 4>, 'StageDevice': <DeviceType.StageDevice: 5>, 'XYStageDevice': <DeviceType.XYStageDevice: 6>, 'SerialDevice': <DeviceType.SerialDevice: 7>, 'GenericDevice': <DeviceType.GenericDevice: 8>, 'AutoFocusDevice': <DeviceType.AutoFocusDevice: 9>, 'CoreDevice': <DeviceType.CoreDevice: 10>, 'ImageProcessorDevice': <DeviceType.ImageProcessorDevice: 11>, 'SignalIODevice': <DeviceType.SignalIODevice: 12>, 'MagnifierDevice': <DeviceType.MagnifierDevice: 13>, 'SLMDevice': <DeviceType.SLMDevice: 14>, 'HubDevice': <DeviceType.HubDevice: 15>, 'GalvoDevice': <DeviceType.GalvoDevice: 16>}
    def __eq__(self, other: typing.Any) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __init__(self, value: int) -> None: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: typing.Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setstate__(self, state: int) -> None: ...
    def __str__(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class GalvoInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> GalvoInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class GenericInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> GenericInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class HubInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> HubInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class ImageProcessorInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> ImageProcessorInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class LoadedDeviceAdapter:
    def __init__(self, arg0: str, arg1: str) -> None: ...
    def get_available_device_names(self) -> list[str]: ...
    def get_device_description(self, deviceName: str) -> str: ...
    def get_name(self) -> str: ...
    def load_camera(self, name: str, label: str) -> CameraInstance: ...
    def load_device(self, name: str, label: str) -> DeviceInstance: ...

class Logger:
    pass

class MagnifierInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> MagnifierInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class MockCMMCore:
    pass

class PluginManager:
    def GetAvailableDeviceAdapters(self) -> list[str]: ...
    def GetDeviceAdapter(self, moduleName: str) -> LoadedDeviceAdapter: ...
    def GetSearchPaths(self) -> list[str]: ...
    def SetSearchPaths(self, paths: typing.Iterable) -> None: ...
    def UnloadPluginLibrary(self, moduleName: str) -> None: ...
    def __init__(self) -> None: ...

class PropertyType:
    """
    Members:

      Undef

      String

      Float

      Integer
    """

    Float: typing.ClassVar[PropertyType]  # value = <PropertyType.Float: 2>
    Integer: typing.ClassVar[PropertyType]  # value = <PropertyType.Integer: 3>
    String: typing.ClassVar[PropertyType]  # value = <PropertyType.String: 1>
    Undef: typing.ClassVar[PropertyType]  # value = <PropertyType.Undef: 0>
    __members__: typing.ClassVar[
        dict[str, PropertyType]
    ]  # value = {'Undef': <PropertyType.Undef: 0>, 'String': <PropertyType.String: 1>, 'Float': <PropertyType.Float: 2>, 'Integer': <PropertyType.Integer: 3>}
    def __eq__(self, other: typing.Any) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __init__(self, value: int) -> None: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: typing.Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setstate__(self, state: int) -> None: ...
    def __str__(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class SLMInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> SLMInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class SerialInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> SerialInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class ShutterInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> ShutterInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class SignalIOInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> SignalIOInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class StageInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> StageInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class StateInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> StateInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...

class XYStageInstance:
    def AddToPropertySequence(self, arg0: str, arg1: str) -> None: ...
    def Busy(self) -> bool: ...
    def ClearPropertySequence(self, arg0: str) -> None: ...
    def DetectDevice(self) -> DeviceDetectionStatus: ...
    def GetAdapterModule(self) -> LoadedDeviceAdapter: ...
    def GetDelayMs(self) -> float: ...
    def GetDescription(self) -> str: ...
    def GetErrorText(self, arg0: int) -> str: ...
    def GetLabel(self) -> str: ...
    def GetName(self) -> str: ...
    def GetNumberOfPropertyValues(self, arg0: str) -> int: ...
    def GetParentID(self) -> str: ...
    def GetProperty(self, arg0: str) -> str: ...
    def GetPropertyInitStatus(self, arg0: str) -> bool: ...
    def GetPropertyLowerLimit(self, arg0: str) -> float: ...
    def GetPropertyNames(self) -> list[str]: ...
    def GetPropertyReadOnly(self, arg0: str) -> bool: ...
    def GetPropertySequenceMaxLength(self, arg0: str) -> int: ...
    def GetPropertyType(self, arg0: str) -> PropertyType: ...
    def GetPropertyUpperLimit(self, arg0: str) -> float: ...
    def GetPropertyValueAt(self, arg0: str, arg1: int) -> str: ...
    def GetRawPtr(self) -> Device: ...
    def GetType(self) -> DeviceType: ...
    def HasInitializationBeenAttempted(self) -> bool: ...
    def HasProperty(self, arg0: str) -> bool: ...
    def HasPropertyLimits(self, arg0: str) -> bool: ...
    def Initialize(self) -> None: ...
    def IsInitialized(self) -> bool: ...
    def IsPropertySequenceable(self, arg0: str) -> bool: ...
    def LogMessage(self, arg0: str, arg1: bool) -> int: ...
    def SendPropertySequence(self, arg0: str) -> None: ...
    def SetCallback(self, arg0: Core) -> None: ...
    def SetDelayMs(self, arg0: float) -> None: ...
    def SetDescription(self, arg0: str) -> None: ...
    def SetParentID(self, arg0: str) -> None: ...
    def SetProperty(self, arg0: str, arg1: str) -> None: ...
    def Shutdown(self) -> None: ...
    def StartPropertySequence(self, arg0: str) -> None: ...
    def StopPropertySequence(self, arg0: str) -> None: ...
    def SupportsDeviceDetection(self) -> bool: ...
    def UsesDelay(self) -> bool: ...
    def __enter__(self) -> XYStageInstance: ...
    def __exit__(self, *args) -> None: ...
    def __init__(
        self,
        arg0: MockCMMCore,
        arg1: LoadedDeviceAdapter,
        arg2: str,
        arg3: Device,
        arg4: typing.Callable,
        arg5: str,
        arg6: Logger,
        arg7: Logger,
    ) -> None: ...
