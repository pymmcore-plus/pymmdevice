[build-system]
requires = ["meson-python", "pybind11"]
build-backend = "mesonpy"


# https://peps.python.org/pep-0621/
[project]
name = "pymmdevice"
version = "0.1.0"
description = "wrapper around MMDevice"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Talley Lambert", email = "talley.lambert@example.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = []

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pymmcore-plus"]
dev = [
    "pymmdevice[test]",
    "ninja",
    "meson-python",
    "pybind11-stubgen",
    "pybind11",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "rich",
    "ruff",
]

[project.urls]
homepage = "https://github.com/pymmcore-plus/pymmdevice"
repository = "https://github.com/pymmcore-plus/pymmdevice"

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)

]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"*.pyi" = ["D", "S", "E501"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["pymmdevice._pymmdevice"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error"]

[tool.cibuildwheel]
test-command = "pytest {project}/tests"
test-extras = ["test"]
test-skip = ["*universal2:arm64"]


# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["pymmdevice"]

[tool.check-manifest]
ignore = [".pre-commit-config.yaml", ".ruff_cache/**/*", "tests/**/*"]

[tool.typos.default.extend-identifiers]
PrepareSequenceAcqusition = "PrepareSequenceAcqusition"
